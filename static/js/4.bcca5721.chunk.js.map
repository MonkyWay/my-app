{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","Components/Dialogs/Dialog/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","classes","dialogs","name","Message","messages","message","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","Dialogs","dialogsElements","dialogsPage","map","d","messagesElements","m","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageActionCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,qJCGzGC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAK,eAJX,GAEXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,2FCJ9DM,EAVI,SAACJ,GAChB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,qBAAKC,UAAaC,IAAQC,QAA1B,SACI,cAAC,IAAD,CAASR,GAAMI,EAAf,SAAsBL,EAAMU,UCAzBC,EANC,SAACX,GACb,OACI,qBAAKO,UAAaC,IAAQI,SAA1B,SAAqCZ,EAAMa,W,iCCG7CC,EAAeC,YAAiB,KA4ChCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACjB,GACpB,OAAO,8BACH,uBAAMmB,SAAYnB,EAAMoB,aAAxB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,SAAY,CAACC,IAAUT,GACvBU,UAAaC,IACbf,KAAO,iBACPgB,YAAc,yBAEzB,8BACI,4DAQDC,EA5CC,SAAC3B,GACb,IAAI4B,EAAkB5B,EAAM6B,YAAYpB,QAAQqB,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAQqB,EAAErB,KAEXJ,GAAMyB,EAAEzB,IADDyB,EAAEzB,OAEzE0B,EAAmBhC,EAAM6B,YAAYjB,SAASkB,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAASpB,QAAWoB,EAAEpB,QAEbP,GAAM2B,EAAE3B,IADD2B,EAAE3B,OAO7E,OACI,sBAAKC,UAAaC,IAAQC,QAA1B,UACI,qBAAKF,UAAaC,IAAQ0B,aAA1B,SACKN,IAEL,sBAAKrB,UAAaC,IAAQI,SAA1B,UACI,8BAAMoB,IACN,cAAChB,EAAD,CAAqBG,SAXb,SAACgB,GACjBnC,EAAMoC,YAAYD,EAAOE,0B,yBCElBC,sBACXnC,aAfkB,SAACV,GACnB,MAAO,CACHoC,YAAapC,EAAMoC,gBAIF,SAACU,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAyBH,SAO1CzC,IAFW0C,CAGbX","file":"static/js/4.bcca5721.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3QYGe\",\"dialogsItems\":\"Dialogs_dialogsItems__1RBMx\",\"messages\":\"Dialogs_messages__11d0J\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = '/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className = {classes.dialogs}>\r\n            <NavLink to = {path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className = {classes.messages}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from \"./Dialog/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name = {d.name}\r\n                                                                        key = {d.id}\r\n                                                                        id = {d.id} />);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message = {m.message}\r\n                                                                        key = {m.id}\r\n                                                                        id = {m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className = {classes.dialogs}>\r\n            <div className = {classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className = {classes.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit = {addNewMessage} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return <div>\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field validate = {[required, maxLength100]}\r\n                       component = {Textarea}\r\n                       name = \"newMessageBody\"\r\n                       placeholder = \"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send message</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}