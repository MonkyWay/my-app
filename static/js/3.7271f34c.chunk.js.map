{"version":3,"sources":["hoc/withAuthRedirect.jsx","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","Textarea","Object","keys","contacts","map","key","classes","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","avatar","src","photos","large","userPhoto","htmlFor","id","target","files","length","initialValues","formData","then","Post","item","message","likes","maxLength100","maxLengthCreator","AddNewPostReduxForm","Field","validate","required","component","placeholder","name","MyPosts","postsElements","posts","reverse","p","likesCount","console","log","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.7271f34c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to = '/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"ProfileInfo_background__1wNfR\",\"avatar\":\"ProfileInfo_avatar__1Xh-X\",\"contact\":\"ProfileInfo_contact__20opR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"MyPosts_profile__1rYeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2xoiq\"};","import React, {useState, useEffect} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = ()=> {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b><span onDoubleClick = {activateEditMode}>{ props.status || 'set a status message'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange = {onStatusChange}\r\n                           onBlur = {deactivateEditMode}\r\n                           autoFocus = {true}\r\n                           type = \"text\"\r\n                           value = {status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit = {handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className = {style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b> {createField(\"Full name\", \"fullName\", Input, [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {createField(\"\", \"lookingForAJob\", Input, [], {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional\r\n               skills:</b>{createField(\"My professional skills\", \"lookingForAJobDescription\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>{createField(\"About me\", \"aboutMe\", Textarea, [])}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className = {classes.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, Input, [])}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;\r\n\r\n","import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/userb.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className = {classes.avatar}\r\n                     src = {profile.photos.large || userPhoto} />\r\n                {isOwner &&\r\n                <div>\r\n                    <label htmlFor = {\"file\"}>Update pic</label>\r\n                    <input id={'file'} type = {\"file\"}\r\n                           onChange = {onMainPhotoSelected} />\r\n                </div>}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues = {profile}\r\n                                       profile = {profile}\r\n                                       onSubmit = {onSubmit} />\r\n                    : <ProfileData goToEditMode = {() => {\r\n                        setEditMode(true)\r\n                    }}\r\n                                   profile = {profile}\r\n                                   isOwner = {isOwner} />}\r\n\r\n\r\n                <ProfileStatusWithHooks status = {status}\r\n                                        updateStatus = {updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick = {goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key = {key}\r\n                            contactTitle = {key}\r\n                            contactValue = {profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className = {classes.contact}>\r\n        <b>{contactTitle} :</b> {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={classes.item}>\r\n        {props.message}\r\n        <br/>\r\n        <span>{props.likes} Like</span>\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n\r\n    let postsElements = [...props.posts].reverse().map(p => <Post key = {p.id}\r\n                                                                  message = {p.message}\r\n                                                                  likes = {p.likesCount}\r\n                                                                  id = {p.id} />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n    console.log('RENDER');\r\n\r\n    return (\r\n        <div className = {classes.profile}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit = {onAddPost} />\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit = {props.handleSubmit}>\r\n        <div>\r\n            <Field validate = {[required, maxLength100]}\r\n                   component = {Textarea}\r\n                   placeholder = 'Enter your post'\r\n                   name = 'newPostText' />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto = {savePhoto}\r\n                         isOwner = {isOwner}\r\n                         profile = {profile}\r\n                         saveProfile={saveProfile}\r\n                         status = {status}\r\n                         updateStatus = {updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile = {this.props.profile}\r\n                     status = {this.props.status}\r\n                     isOwner = {!this.props.match.params.userId}\r\n                     updateStatus = {this.props.updateStatus}\r\n                     savePhoto = {this.props.savePhoto} />\r\n        )\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);\r\n"],"sourceRoot":""}